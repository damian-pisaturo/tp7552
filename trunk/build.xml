<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="taller">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../Program Files/Eclipse/eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="taller.classpath">
        <pathelement location="web/WEB-INF/classes"/>
        <pathelement location="web/WEB-INF/lib/antlr-2.7.6.jar"/>
        <pathelement location="web/WEB-INF/lib/asm-1.5.3.jar"/>
        <pathelement location="web/WEB-INF/lib/asm-attrs.jar"/>
        <pathelement location="web/WEB-INF/lib/asm.jar"/>
        <pathelement location="web/WEB-INF/lib/cglib-2.1.3.jar"/>
        <pathelement location="web/WEB-INF/lib/cglib-nodep-2.1_3.jar"/>
        <pathelement location="web/WEB-INF/lib/commons-collections-2.1.1.jar"/>
        <pathelement location="web/WEB-INF/lib/commons-logging-1.0.4.jar"/>
        <pathelement location="web/WEB-INF/lib/commons-pool-1.3.jar"/>
        <pathelement location="web/WEB-INF/lib/dom4j-1.6.1.jar"/>
        <pathelement location="web/WEB-INF/lib/jasper-compiler-4.1.30.jar"/>
        <pathelement location="web/WEB-INF/lib/jasper-runtime-4.1.30.jar"/>
        <pathelement location="web/WEB-INF/lib/jta.jar"/>
        <pathelement location="web/WEB-INF/lib/junit.jar"/>
        <pathelement location="web/WEB-INF/lib/log4j-1.2.13.jar"/>
        <pathelement location="web/WEB-INF/lib/org.mortbay.jetty-4.2.24.jar"/>
        <pathelement location="web/WEB-INF/lib/portlet-api-1.0.jar"/>
        <pathelement location="web/WEB-INF/lib/servlet-api-2.3.jar"/>
        <pathelement location="web/WEB-INF/lib/slf4j-api-1.4.2.jar"/>
        <pathelement location="web/WEB-INF/lib/slf4j-log4j12-1.4.2.jar"/>
        <pathelement location="web/WEB-INF/lib/spring-2.0.jar"/>
        <pathelement location="web/WEB-INF/lib/spring-mock.jar"/>
        <pathelement location="web/WEB-INF/lib/wicket-1.3.4-sources.jar"/>
        <pathelement location="web/WEB-INF/lib/wicket-1.3.4.jar"/>
        <pathelement location="web/WEB-INF/lib/wicket-extensions-1.3.4-sources.jar"/>
        <pathelement location="web/WEB-INF/lib/wicket-extensions-1.3.4.jar"/>
        <pathelement location="web/WEB-INF/lib/wicket-ioc-1.3.4-sources.jar"/>
        <pathelement location="web/WEB-INF/lib/wicket-ioc-1.3.4.jar"/>
        <pathelement location="web/WEB-INF/lib/wicket-spring-1.3.4-sources.jar"/>
        <pathelement location="web/WEB-INF/lib/wicket-spring-1.3.4.jar"/>
        <pathelement location="web/WEB-INF/lib/wicket-spring-annot-1.3.4-sources.jar"/>
        <pathelement location="web/WEB-INF/lib/wicket-spring-annot-1.3.4.jar"/>
        <pathelement location="web/WEB-INF/lib/xml-apis.jar"/>
    </path>
    <target name="init">
        <mkdir dir="web/WEB-INF/classes"/>
        <copy includeemptydirs="false" todir="web/WEB-INF/classes">
            <fileset dir="src/java" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="web/WEB-INF/classes">
            <fileset dir="tests" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="web/WEB-INF/classes">
            <fileset dir="src/resources" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="web/WEB-INF/classes">
            <fileset dir="config" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target>
    <target name="clean">
        <delete dir="web/WEB-INF/classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="web/WEB-INF/classes" source="${source}" target="${target}">
            <src path="src/java"/>
            <classpath refid="taller.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="web/WEB-INF/classes" source="${source}" target="${target}">
            <src path="tests"/>
            <classpath refid="taller.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="web/WEB-INF/classes" source="${source}" target="${target}">
            <src path="src/resources"/>
            <classpath refid="taller.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="web/WEB-INF/classes" source="${source}" target="${target}">
            <src path="config"/>
            <classpath refid="taller.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="New_configuration">
        <java classname="common.web.Start" failonerror="true" fork="yes">
            <classpath refid="taller.classpath"/>
        </java>
    </target>
    <target name="QueueTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="queue.QueueTest" todir="${junit.output.dir}"/>
            <classpath refid="taller.classpath"/>
        </junit>
    </target>
    <target name="tests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="heap.MaxHeapIntegerTest" todir="${junit.output.dir}"/>
            <test name="heap.MaxHeapStringTest" todir="${junit.output.dir}"/>
            <test name="heap.MinHeapIntegerTest" todir="${junit.output.dir}"/>
            <test name="heap.MinHeapStringTest" todir="${junit.output.dir}"/>
            <test name="queue.QueueTest" todir="${junit.output.dir}"/>
            <test name="stack.StackTest" todir="${junit.output.dir}"/>
            <test name="tree.HeightBTreeTest" todir="${junit.output.dir}"/>
            <test name="tree.WeightBTreeTest" todir="${junit.output.dir}"/>
            <test name="trie.TrieTest" todir="${junit.output.dir}"/>
            <classpath refid="taller.classpath"/>
        </junit>
    </target>
    <target name="TreeTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tree.TreeTest" todir="${junit.output.dir}"/>
            <classpath refid="taller.classpath"/>
        </junit>
    </target>
    <target name="TreeTest.testTree">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tree.TreeTest" todir="${junit.output.dir}"/>
            <classpath refid="taller.classpath"/>
        </junit>
    </target>
    <target name="TreeTest.treeTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tree.TreeTest" todir="${junit.output.dir}"/>
            <classpath refid="taller.classpath"/>
        </junit>
    </target>
    <target name="TrieTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="trie.TrieTest" todir="${junit.output.dir}"/>
            <classpath refid="taller.classpath"/>
        </junit>
    </target>
    <target name="TrieTest.testContains">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="trie.TrieTest" todir="${junit.output.dir}"/>
            <classpath refid="taller.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
	<target name="war">
		<war destfile="taller.war" webxml="web/WEB-INF/web.xml" update="true">
			<classes dir="web/WEB-INF/classes"/>
			<fileset dir="web">
				<exclude name="WEB-INF/web.xml"/>
			</fileset>
		</war>
	</target>
</project>
